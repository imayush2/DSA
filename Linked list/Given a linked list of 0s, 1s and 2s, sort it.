class Solution
{
    public:
    //Function to sort a linked list of 0s, 1s and 2s.
    Node* segregate(Node *head) {
        
        Node* zeroHead = new Node(-1);
        Node* zeroTail = zeroHead;
        Node* oneHead = new Node(-1);
        Node* oneTail = oneHead;
        Node* twoHead = new Node(-1);
        Node* twoTail = twoHead;
    
        while(head){
            
            if(head->data == 0){
                zeroHead->next = head;
                zeroHead = zeroHead->next;
            }
            else if(head->data == 1){
                oneHead->next = head;
                oneHead = oneHead->next;
            }
            else{
                twoHead->next = head;
                twoHead = twoHead->next;
            }
            head = head->next;
        }
        
        if(oneTail->next != NULL)
            zeroHead->next = oneTail->next;
        else
            zeroHead->next = twoTail->next;
            
        oneHead->next = twoTail->next;
        twoHead->next = NULL;
        
        head = zeroTail->next;
        delete zeroTail;
        delete oneTail;
        delete twoTail;
        
        return head;
    }
};
