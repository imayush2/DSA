class Solution
{
    public:    
       vector <int> commonElements (int A[], int B[], int C[], int n1, int n2, int n3)
        {
            vector<int>ans;
            set<int>st;
            int i=0,j=0,k=0;
            
            while(i<n1 && j<n2 && k<n3){
                if(A[i] == B[j] && B[j] == C[k]){
                    st.insert(A[i]);
                    i++;
                    j++;
                    k++;
                }
                else if(A[i]<B[j]){
                    i++;
                }
                else if(B[j]<C[k]){
                    j++;
                }
                else{
                    k++;
                }
            }
            for (auto i:st){
                ans.push_back(i);
                
            }
            return ans;
        }

};


//HashMaps 


class Solution
{
    public:    
       vector <int> commonElements (int A[], int B[], int C[], int n1, int n2, int n3)
        {
            //code here.
            unordered_map<int,int> mp;
            for(int i =0;i<n1;i++)
            {
                //if(mp.find(A[i])!=mp.end())
                if(mp[A[i]]==1) continue;
                else
                    mp[A[i]]=1;
            }
            for(int i =0;i<n2;i++)
            {
                if(mp[B[i]]==1)
                {
                    mp[B[i]]++;
                }
                else if(mp[B[i]]==2) continue;
            }
            for(int i =0;i<n3;i++)
            {
                if(mp[C[i]]==2)
                {
                    mp[C[i]]++;
                }
            }
            vector<int> v;
            for(auto i : mp)
            {
                if(i.second==3)
                {
                    v.push_back(i.first);
                }
            }
            sort(v.begin(),v.end());
            return v;
        }

};
