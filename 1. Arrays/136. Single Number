class Solution {
public:
    int singleNumber(vector<int>& nums) { 
       sort(nums.begin(),nums.end());
        
        for(int i=1;i<nums.size();i+=2){
            if(nums[i]!=nums[i-1])
                return nums[i-1];
        }
        return nums[nums.size()-1];
    }
};

class Solution {
public:
    int singleNumber(vector<int>& nums) {
        
        int ans=0;
        for(int i=0;i<nums.size();i++)
        {
            ans=ans^nums[i];
        }
        return ans;
    }
};


class Solution {
public:
    int singleNumber(vector<int>& nums) {

       unordered_map<int,int>mp;

       for(int i=0;i<nums.size();i++){
           mp[nums[i]]++;
       }
       for(auto it:mp ){
           if((it.second)%2==1)
           return it.first;
       } 
       return -1;
    }
};
