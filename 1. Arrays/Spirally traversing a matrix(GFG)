class Solution
{   
    public: 
    //Function to return a list of integers denoting spiral traversal of matrix.
    vector<int> spirallyTraverse(vector<vector<int> > matrix, int r, int c) 
    {
        // code here
    int total_elements = r*c;
    vector<int>arr(total_elements);
    
    int startRow=0;
    int endRow=r-1;
    int startCol=0;
    int endCol=c-1;
    
    int i=0;

    //outer loop (traverse array boundary)
    while(startCol<=endCol and startRow<=endRow ){

        //Start Row
        for(int col=startCol;col<=endCol;col++){
            arr[i] = matrix[startRow][col];
            i++;
        }

        //End Col
        for(int row=startRow+1;row<=endRow;row++){
            arr[i] = matrix[row][endCol];
            i++;
        }

        //End Row
        for(int col=endCol-1;col>=startCol;col--){
            if(startRow==endRow){
                break;
            }
            arr[i] = matrix[endRow][col];
            i++;
        }

        //Start Col
        for(int row=endRow-1;row>=startRow+1;row--){
            //Avoid Duplicate printing of element
            if(startCol==endCol){
                break;
            }
            arr[i] = matrix[row][startCol];
            i++;
        }

        //update the variables to point to inner spiral
        startRow++;
        endRow--;
        startCol++;
        endCol--;

    }
    return arr;
    }
};
