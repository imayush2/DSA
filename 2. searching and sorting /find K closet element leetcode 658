// Two pointer 
class Solution {
public:
vector<int> twopointer(vector<int>& arr, int k, int x) {
        int start = 0, endd = arr.size()-1;
        
        while(endd-start >= k) {
            if( abs(arr[start]-x) > abs(arr[endd]-x)){
                start++;}
            else {
                endd--;}

        }
        vector<int> ans;
        for(int i=start;i<=endd;i++){
            ans.push_back(arr[i]);
        }
        return ans;
    }
    vector<int> findClosestElements(vector<int>& arr, int k, int x) {
        
        return twopointer(arr,k,x);
    }
};

//binary search

class Solution {
public:
    vector<int> findClosestElements(vector<int>& arr, int k, int x) {
        int left = 0, right = arr.size() - k;
        while (left < right){
            int mid = (left + right) / 2;
            if (x - arr[mid] > arr[mid + k] - x){
                left = mid + 1;
            }
            else{
                right = mid;
            }
        }
        return vector<int>(arr.begin() + left, arr.begin() + left + k);
    }
};
